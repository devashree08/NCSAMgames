<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hangman Game</title>
<style>
  @import url("https://fonts.googleapis.com/css2?family=DotGothic16&display=swap");
    :root {
      --primary-color: #1f2f61;
      --secondary-color: #224ca4;
      --light-color: #a7c2da;
    }

    * {
      box-sizing: border-box;
    }

    body {
      background-color: var(--primary-color);
      color: var(--light-color);
      font-family: "DotGothic16", sans-serif;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      height: 80vh;
      overflow: hidden;
      margin: 0;
    }

    h1 {
      margin: 20px 0 0;
      letter-spacing: 0.5rem;
      text-transform: uppercase;
    }

    h2,
    h3 {
      letter-spacing: 0.2rem;
    }

    .game-container {
      padding: 20px 30px;
      position: relative;
      margin: auto;
      height: 350px;
      width: 450px;
    }

    .figure-container {
      fill: transparent;
      stroke: var(--light-color);
      stroke-width: 4px;
      stroke-linecap: round;
    }

    .figure-part {
      display: none;
    }

    .wrong-letters-container {
      position: absolute;
      top: 20px;
      right: 20px;
      display: flex;
      flex-direction: column;
      text-align: right;
    }

    .wrong-letters-container p {
      margin: 0 0 5px;
    }

    .wrong-letters-container span {
      font-size: 24px;
    }

    .word {
      display: flex;
      position: absolute;
      bottom: 10px;
      left: 50%;
      transform: translateX(-50%);
    }

    .letter {
      border-bottom: 3px solid var(--secondary-color);
      display: inline-flex;
      font-size: 30px;
      align-items: center;
      justify-content: center;
      margin: 0 3px;
      height: 50px;
      width: 20px;
    }

    .popup-container {
      background-color: rgba(0, 0, 0, 0.3);
      position: fixed;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      display: none;
      align-items: center;
      justify-content: center;
    }

    .popup {
      background-color: var(--secondary-color);
      border-radius: 5px;
      box-shadow: 0 15px 10px 3px rgba(0, 0, 0, 0.1);
      padding: 20px;
      text-align: center;
    }

    .popup button {
      cursor: pointer;
      background-color: var(--light-color);
      color: var(--secondary-color);
      border: 0;
      margin-top: 20px;
      padding: 12px 20px;
      font-size: 16px;
      font-family: inherit;
      border-radius: 5px;
    }

    .popup button:active {
      transform: scale(0.98);
    }

    .popup button:focus {
      outline: none;
    }

    .notification-container {
      background-color: rgba(0, 0, 0, 0.3);
      border-radius: 10px 10px 0 0;
      padding: 15px 20px;
      position: absolute;
      bottom: -60px;
      transition: transform 0.3s ease-in-out;
    }

    .notification-container.show {
      transform: translateY(-60px);
    }

    .notification-container p {
      margin: 0;
    }
</style>
</head>
    <p>Find the hidden word - Press a letter</p>
    <div class="game-container">
      <svg height="250" width="200" class="figure-container">
        <!-- rod -->
        <line x1="60" y1="20" x2="140" y2="20" />
        <line x1="140" y1="20" x2="140" y2="50" />
        <line x1="60" y1="20" x2="60" y2="230" />
        <line x1="20" y1="230" x2="100" y2="230" />
        <!-- head -->
        <circle cx="140" cy="70" r="20" class="figure-part" />
        <!-- body -->
        <line x1="140" y1="90" x2="140" y2="150" class="figure-part" />
        <!-- arms -->
        <line x1="140" y1="120" x2="120" y2="100" class="figure-part" />
        <line x1="140" y1="120" x2="160" y2="100" class="figure-part" />
        <!-- legs -->
        <line x1="140" y1="150" x2="120" y2="180" class="figure-part" />
        <line x1="140" y1="150" x2="160" y2="180" class="figure-part" />
      </svg>
      <div class="wrong-letters-container">
        <div id="wrong-letters"></div>
      </div>
      <div class="word" id="word"></div>
    </div>
    <!-- Popup -->
    <div class="popup-container" id="popup-container">
      <div class="popup">
        <h2 id="final-message"></h2>
        <h3 id="final-message-reveal-word"></h3>
        <button id="play-button">Play Again</button>
      </div>
    </div>
    <!-- Notification -->
    <div class="notification-container" id="notification-container">
      <p>You have already entered this letter</p>
    </div>
    <script>
      const wordElement = document.getElementById("word");
      const wrongLettersElement = document.getElementById("wrong-letters");
      const playAgainButton = document.getElementById("play-button");
      const popup = document.getElementById("popup-container");
      const notification = document.getElementById("notification-container");
      const finalMessage = document.getElementById("final-message");
      const finalMessageRevealWord = document.getElementById(
        "final-message-reveal-word"
      );
      const figureParts = document.querySelectorAll(".figure-part");

      const words = [
        "Report Phishy emails with PhishAlarm",
        "Watch out for the SMish via text",
        "Scanning QR codes can be dangerous",
        "Secure your login credesntials",
        "To use AI or no that is the question",
      ];
      let selectedWord = words[Math.floor(Math.random() * words.length)];

      let playable = true;

      const correctLetters = [];
      const wrongLetters = [];
      function displayWord() {
  const wordsInSentence = selectedWord.split(" "); // Split the sentence into words
  wordElement.innerHTML = wordsInSentence
    .map((word) => {
      return word
        .split("") // Split each word into letters
        .map((letter) => `
          <span class="letter">
            ${correctLetters.includes(letter.toLowerCase()) ? letter : ""}
          </span>
        `)
        .join(" "); // Add space between letters in a word
    })
    .join("&nbsp;&nbsp;"); // Add double space between words
  const innerWord = wordElement.innerText.replace(/\s/g, "").toLowerCase(); // Remove spaces for comparison

  if (innerWord === selectedWord.replace(/\s/g, "").toLowerCase()) {
    finalMessage.innerText = "Congratulations! You won! ðŸ˜ƒ";
    finalMessageRevealWord.innerText = "";
    popup.style.display = "flex";
    playable = false;
  }
}



      function updateWrongLettersElement() {
        wrongLettersElement.innerHTML = `
        ${wrongLetters.length > 0 ? "<p>Wrong</p>" : ""}
        ${wrongLetters.map((letter) => `<span>${letter}</span>`)}
        `;
        figureParts.forEach((part, index) => {
          const errors = wrongLetters.length;
          index < errors
            ? (part.style.display = "block")
            : (part.style.display = "none");
        });
        if (wrongLetters.length === figureParts.length) {
          finalMessage.innerText = "Unfortunately you lost. ðŸ˜•";
          finalMessageRevealWord.innerText = `...the word was: ${selectedWord}`;
          popup.style.display = "flex";
          playable = false;
        }
      }

      function showNotification() {
        notification.classList.add("show");
        setTimeout(() => {
          notification.classList.remove("show");
        }, 2000);
      }

      window.addEventListener("keypress", (e) => {
  if (playable) {
    const letter = e.key.toLowerCase(); // Convert the input letter to lowercase
    if (letter >= "a" && letter <= "z") {
      if (selectedWord.toLowerCase().includes(letter)) {
        if (!correctLetters.includes(letter)) {
          correctLetters.push(letter);
          displayWord();
        } else {
          showNotification();
        }
      } else {
        if (!wrongLetters.includes(letter)) {
          wrongLetters.push(letter);
          updateWrongLettersElement();
        } else {
          showNotification();
        }
      }
    }
  }
});

      playAgainButton.addEventListener("click", () => {
        playable = true;
        correctLetters.splice(0);
        wrongLetters.splice(0);
        selectedWord = words[Math.floor(Math.random() * words.length)];
        displayWord();
        updateWrongLettersElement();
        popup.style.display = "none";
      });

      // Init
      displayWord();

    </script>
</html>
